name: build_deploy_aks
on:
  workflow_dispatch
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      deploy_aks: false
      aks-bicep: aks.bicep
      acr-bicep: acr.bicep
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/login@v1.4.3
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

#    - uses: azure/arm-deploy@v1
#      name: Run preflight AKS bicep validation
#      with:
#        resourceGroupName: ${{ secrets.RESOURCE_GROUP }}
#        template: ./azure/aks.bicep
#        parameters: ' linuxAdminUsername=azureuser  dnsPrefix=demoaks'
#        deploymentMode: Validate
        
 #   - name: Deploy Azure AKS resources
 #     uses: azure/arm-deploy@v1
 #     with:
 #       resourceGroupName: ${{ secrets.RESOURCE_GROUP }}
 #       template: ./azure/aks.bicep
 #       parameters: ' linuxAdminUsername=azureuser  dnsPrefix=demoaks'
      
    - name: Run preflight acr bicep validation
      uses: azure/arm-deploy@v1.0.9
      with:
        resourceGroupName: ${{ secrets.RESOURCE_GROUP }}
        template: ./azure/acr.bicep
        #parameters: ' aksName=aks101cluster'
        deploymentMode: Validate
      
    - name: Deploy Azure ACR resources
      uses: azure/arm-deploy@v1.0.9
      with:
        resourceGroupName: ${{ secrets.RESOURCE_GROUP }}
        template: ./azure/acr.bicep
     #   parameters: ' aksName=aks101cluster'
# sshRSAPublicKey=${{ secrets.ID_RSA_PUB }}
  build:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code 
        uses: actions/checkout@v3
      - name: ACR build
        id: build-push-acr
        uses: azure/acr-build@v1
        with:
          service_principal: ${{ secrets.service_principal }}
          service_principal_password: ${{ secrets.service_principal_password }}
          tenant: ${{ secrets.tenant }}
          registry: ${{ secrets.registry }}
          repository: ${{ secrets.repository }}
          image:  azure-vote-front
          folder: azure-vote
          branch: master
          tag: ${{ github.sha }}
      - name: Azure login
        id: login
        uses: azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.resource_group }}' 
          cluster-name: '${{ secrets.cluster_name }}'
      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3
      - name: Deploy to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
             azure-vote-all-in-one-redis.yaml
          images: '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}/azure-vote-front:${{ github.sha }}'
          pull-images: false
